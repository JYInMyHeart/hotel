<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alex.mapper.RoomMapper">
  <resultMap id="BaseResultMap" type="com.alex.bean.Room">
    <!--@mbg.generated-->
    <!--@Table room-->
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="description" jdbcType="VARCHAR" property="description"/>
  </resultMap>


  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List"/>
    from room
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from room
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.alex.bean.Room" useGeneratedKeys="true" >
    <!--@mbg.generated-->
    insert into room (`name`, description)
    values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.alex.bean.Room"
          useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.alex.bean.Room">
    <!--@mbg.generated-->
    update room
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alex.bean.Room">
    <!--@mbg.generated-->
    update room
    set `name` = #{name,jdbcType=VARCHAR},
    description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update room
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.name != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.name,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="description = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.description != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.description,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into room
    (`name`, description)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.name,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <select id="list" resultType="com.alex.bean.RoomVO">
    select room.*, f.id as floor_id, f.name as floor_name
    from room
           left join floor_room fr on room.id = fr.room_id
           left join floor f on f.id = fr.floor_id
  </select>

  <select id="selectById" resultType="com.alex.bean.RoomVO">
    select room.* ,f.id as floor_id , f.name as floor_name
    from room
    left join floor_room fr on room.id = fr.room_id
    left join floor f on f.id = fr.floor_id
    where room_id = #{roomId,jdbcType=INTEGER} and floor_id = #{floorId,jdbcType=INTEGER}
  </select>

  <select id="selectSelective" resultMap="BaseResultMap">
    select * from room
    where name = #{name} and description = #{description}
  </select>

  <select id="count" resultType="java.lang.Integer">
    select count(id) from room
  </select>
</mapper>